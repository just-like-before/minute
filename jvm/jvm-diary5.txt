1 加载的具体过程
加载 查找并加载类的二进制数据。Jvm虚拟机需要的字节码是存在于磁盘上，而所用到的类必须加载到内存中才可以运行起来，所以说加载阶段就是将字节码通过IO输出到jvm内存中。
连接 有三个步骤验证，准备，解析。
验证阶段确保被加载类的正确性，确保class文件包含的信息符合当前虚拟机的要求。同时还会进行文件格式的验证，验证class字节码时候符合字节码规范，主次版本号是否在当前虚拟机的处理范围之内，常量池中的常量是否有不被支持的类型。元数据验证，对字节码所描述的信息进行语义分析。如这个类是否有父类，处过java.lang.Object。字节码验证，通过数据流和控制流分析，确保语义合法，符合逻辑。符号引用验证，确保解析过程能过正常执行。(确保class文件包含的信息符合当前虚拟机的要求，并且不会危害虚拟机的安全。在验证阶段会进行文件格式的验证，验证class字节码时候符合字节码规范，主次版本号是否在当前虚拟机的处理范围之内，常量池中的常量是否有不被支持的类型。元数据验证，对字节码所描述的信息进行语义分析。如这个类是否有父类，处过java.lang.Object。字节码验证，通过数据流和控制流分析，确保语义合法，符合逻辑。符号引用验证，确保解析过程能过正常执行。验证阶段是非常重要的，但不是必须的。如果所使用的类要进行反复验证，则可以考虑使用-Xverifynone参数来关闭大部分类的验证措施，缩短类加载时间。准备阶段为类的静态变量分配空间，配将其初始化默认值。(这时不会进行赋值的操作，初始化是会进行赋值))
初始化 为类的静态变量赋予正确的值。在java中有两种对类变量进行初始化的设置方式。声明类变量时指定初始值，在静态代码块中为类变量指定初始值。