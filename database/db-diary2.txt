1 聚簇索引和非聚簇索引 稀疏索引 稠密索引 聚集索引 非聚集索引
聚簇索引，也是一种稀疏索引，表顺序按照索引顺序进行存储，也就是说索引顺序与表中物理存储顺序一致，叶子节点存储真实数据行，不再有另外单独的数据页。在一张表中最多只能有一个聚簇索引，因为真实数据的物理顺序只能有一种。其中数据页的上一级存储的是页指针，而不是行指针。
非聚簇索引，也是一种稠密索引，表数据存储顺序与索引顺序无关，叶子节点包含索引字段值和指向数据页数据行的逻辑指针，其行数量(是数据页数据行的指针)和数据表中行数量一致。
稠密索引，每一个索引键值对应一个索引项，稠密索引比稀疏索引更快的定位一条记录。稀疏索引相比于稠密索引的优点是占用空间更小，插入和删除维护的开销也小。
稀疏索引，相比于稠密索引只是为某些索引码值建立记录，查询时，找到最大搜索码值小于或者等于所查询记录搜索码值的索引项，然后从该记录开始向后继续查询直到找到为止。
聚集索引的使用场合为：?
　　a.查询命令的回传结果是以该字段为排序依据的；
　　b.查询的结果返回一个区间的值；
　　c.查询的结果返回某值相同的大量结果集。
聚集索引会降低 insert，和update操作的性能，所以，是否使用聚集索引要全面衡量。?
非聚集索引的使用场合为：
　　a.查询所获数据量较少时；
　　b.某字段中的数据的唯一性比较高时；
非聚集索引必须是稠密索引
聚集索引 InnoDB使用的是聚集索引，索引和数据存储在一起。
非聚集索引 MyISAM使用的是非聚集索引，索引和数据分开存储。
2 谈谈你对事物的理解
事务是InnoDB很重要的一个特性，事务就是数据库从一种一致性的状态转移到另一种一致性的状态，一个业务需要进行多个操作，并且这些操作是相互依赖的，如果系统只是执行这些操作的子集，则会破坏这个业务总体的目标，所以引入事物，让这些操作要么全部成功，要么全部失败，事物有四大特性。
原子性(Atomicity) 是指将多个对于数据库的操作绑定在一起，这些出操作要么全部成功，要么全部失败。
一致性(consistency) 事务操作的前后，数据库从一种一致性状态转移到另一种一致性的状态，数据库的完整性并没有遭到破坏。如用户A给用户B转账100元，这时A账户减100元，B账户加100元，数据库中用户A和B账户的总金额并没有改变。
一致性和原子性是站在不同的角度对事物进行描述，原子性是站在事物的角度对事物进行描述，一致性是站在数据库的角度对事务进行描述的。
隔离性(isolation) 事务之间的操作相互分离，一个事物在提交前对其他事物都是不可见的，事务的隔离性是通过锁来实现的。
持久性(durbility) 事物一旦提交，其结果会永远保存，即使数据库发生宕机，也可以将其恢复。