1 InnoDB的体系结构
InnoDB体系由多个内存块组成的缓冲池以及多个后台线程构成。缓冲池缓冲磁盘数据文件(解决CPU速度和磁盘速度严重不匹配的问题)，后台线程用来保证磁盘文件和缓冲池的一致性(刷新和读取)，并保证数据库异常宕机是能恢复到正常的状态。
缓冲池由Redo log buffer，额外缓冲池和InnoDB内存池组成。
Redo log buffer用来做缓冲日志，InnoDB将Rode log日志放在这个缓冲池，然后在以一定的频率刷新到Redo log日志中。
额外缓冲池用来存储LUR链表，等待，锁数据结构。
InnoDB内存池由数据页，索引页，插入缓冲，自适应性哈希，锁，数据字典组成。
后台线程有master thread，io thread，purge thread，page clear thread
Master thread：以一定的频率异步将数据刷新到磁盘，是InnoDB的主要线程，具有最高的优先级。
Io thread：处理Io请求回调。
Purge thread：在事务提交时清理Undo log。
2 InnoDB有哪些锁
InnoDB支持表锁锁，行锁。其中行锁是InnoDB默认使用的。
行锁是MySQL中锁定粒度最小的锁，表示只是针对当前的操作进行加锁。行锁大大的减小了并发情况下数据库操作的冲突，锁粒度最小，但是加锁的开销也最大。行锁有共享锁和排它锁。开销大，加锁慢；会发生死锁，锁定粒度最小，发生锁冲突概率小，并发高。
表锁是MySQL中锁定粒度最大的一种锁，表示对当前的操作的表进行加锁，但是表锁在并发的情况下会大大提高数据库操作的冲突，减小数据库的并发量。开销小，加锁快；不会出现死锁，锁定粒度大，发生锁冲突的概率高，并发小。
页锁是一种锁定粒度介于行锁和表锁之间的锁。表锁速度快，冲突多，并发小；行锁速度慢，冲突少，并发高；页锁介于二者之间，一次对数据库的操作，锁定相邻的记录。