1 意向共享锁和意向排他锁
InnoDB为了允许行锁和表锁共存，实现多粒度锁机制，提出了意向共享锁和意向排它锁。
意向共享锁(is)：事务在给一个数据行加共享锁时，会先给行所在表加意向共享锁。
意向排它锁(ix)：事务在给一个数据行加排它锁时，会先给行所在表加意向排它锁。
意向共享锁和意向排他锁都不是用户给加的，而是系统自动给加的。意向锁的存在有两点好处，第一是事务在给行加锁前会钱给表加意向锁，所以意向锁的存在知道了事务接下来要进行的操作，意向锁之间不会相互阻止，同时也不同阻止行锁，但是会值表级的读写锁。
2 事务的实现
原子性和一致性，从不同的角度对事务进行了描述。事务的这两种特性都是通过undo log实现的，undo log记录事务开始之前的值，当事务执行失败或者rollback(回滚)时，可以通过undo log记录的值恢复数据。当事务提交的时候purge thread会回收undo log。
事务的隔离性有两中实现的方式，一种是在事务操作前对其进行加锁，防止其他事务对其进行操作，另一种是通过MVCC(多版本并发控制)。
事务的持久性是通过redo log实现的，一方面redo log避免了事务提交时必须写入磁盘的需求，减少io操作，另一方面事务在提交时，必须将事务的所有日志写入磁盘中的重做日志文件中进行持久化。